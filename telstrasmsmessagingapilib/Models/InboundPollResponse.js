/**
 * TelstraSMSMessagingAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of InboundPollResponse
 *
 * @constructor
 */
angular.module('TelstraSMSMessagingAPILib')
    .factory('InboundPollResponse', ['BaseModel', InboundPollResponseModel]);

    function InboundPollResponseModel(BaseModel) {
        var InboundPollResponse = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.to = this.getValue(obj.to);
            this.from = this.getValue(obj.from);
            this.body = this.getValue(obj.body);
            this.receivedTimestamp = this.getValue(obj.receivedTimestamp);
            this.moreMessages = this.getValue(obj.moreMessages);
            this.messageId = this.getValue(obj.messageId);
        };

        InboundPollResponse.prototype = new BaseModel();
        InboundPollResponse.prototype.constructor = InboundPollResponse;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        InboundPollResponse.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'to', realName: 'to' },
                { name: 'from', realName: 'from' },
                { name: 'body', realName: 'body' },
                { name: 'receivedTimestamp', realName: 'receivedTimestamp' },
                { name: 'moreMessages', realName: 'moreMessages' },
                { name: 'messageId', realName: 'messageId' }
            ]);
        };
    
        /**
         * The phone number (recipient) that the message was sent to(in E.164 format).
         *
         * @return {string|null}
         */
        InboundPollResponse.prototype.getTo = function () {
            return this.to;
        };
    
        /**
         * Setter for To
         * 
         * @param {string|null} value 
         */
        InboundPollResponse.prototype.setTo = function (value) {
            this.to = value;
        };
    
        /**
         * The phone number (sender) that the message was sent from (in E.164 format).
         *
         * @return {string|null}
         */
        InboundPollResponse.prototype.getFrom = function () {
            return this.from;
        };
    
        /**
         * Setter for From
         * 
         * @param {string|null} value 
         */
        InboundPollResponse.prototype.setFrom = function (value) {
            this.from = value;
        };
    
        /**
         * Text body of the message that was sent
         *
         * @return {string|null}
         */
        InboundPollResponse.prototype.getBody = function () {
            return this.body;
        };
    
        /**
         * Setter for Body
         * 
         * @param {string|null} value 
         */
        InboundPollResponse.prototype.setBody = function (value) {
            this.body = value;
        };
    
        /**
         * The date and time when the message was recieved by recipient.
         *
         * @return {string|null}
         */
        InboundPollResponse.prototype.getReceivedTimestamp = function () {
            return this.receivedTimestamp;
        };
    
        /**
         * Setter for ReceivedTimestamp
         * 
         * @param {string|null} value 
         */
        InboundPollResponse.prototype.setReceivedTimestamp = function (value) {
            this.receivedTimestamp = value;
        };
    
        /**
         * Indicates if there are more messages that can be polled from the server. 0=No more messages available.
         * Anything else indicates there are more messages on the server.
         *
         * @return {int|null}
         */
        InboundPollResponse.prototype.getMoreMessages = function () {
            return this.moreMessages;
        };
    
        /**
         * Setter for MoreMessages
         * 
         * @param {int|null} value 
         */
        InboundPollResponse.prototype.setMoreMessages = function (value) {
            this.moreMessages = value;
        };
    
        /**
         * Optional message ID of the SMS you sent. Use this ID to view the message status or get responses.
         *
         * @return {string|null}
         */
        InboundPollResponse.prototype.getMessageId = function () {
            return this.messageId;
        };
    
        /**
         * Setter for MessageId
         * 
         * @param {string|null} value 
         */
        InboundPollResponse.prototype.setMessageId = function (value) {
            this.messageId = value;
        };
    
        return InboundPollResponse;
    }

}(angular));
