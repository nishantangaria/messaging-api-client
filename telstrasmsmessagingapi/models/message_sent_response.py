# -*- coding: utf-8 -*-

"""
    telstrasmsmessagingapi.models.message_sent_response

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""


class MessageSentResponse(object):

    """Implementation of the 'MessageSentResponse' model.

    TODO: type model description here.

    Attributes:
        to (string): The mobile phone number (in E.164 format) that the
            message was sent to.
        delivery_status (string): The current status of the message for this
            address. Possible values are; 'DeliveryImpossible' – The message
            has been rejected and cannot be delivered. see the description
            field. 'MessageWaiting' – The message will be delivered as soon as
            possible.
        description (string): This is a string that describes why a message
            could not be delivered.
        message_id (string): The message ID of the SMS that was sent. Use this
            ID to view the message status or to receive get responses.
        message_type (MessageTypeEnum): A string that identifys the transport
            mechanism that was selected for delivering the the message.
        number_segements (int): An integer between 0 and 65536 that indicates
            the number of chargable segments in the message. For SMS this will
            be the number of segments the message had to be divided into
            (after convertion) to a character set understood by the SMS
            network.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "to" : "to",
        "delivery_status" : "deliveryStatus",
        "description" : "description",
        "message_id" : "messageId",
        "message_type" : "messageType",
        "number_segements" : "numberSegements"
    }

    def __init__(self,
                 to=None,
                 delivery_status=None,
                 description=None,
                 message_id=None,
                 message_type=None,
                 number_segements=None):
        """Constructor for the MessageSentResponse class"""

        # Initialize members of the class
        self.to = to
        self.delivery_status = delivery_status
        self.description = description
        self.message_id = message_id
        self.message_type = message_type
        self.number_segements = number_segements


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        to = dictionary.get("to")
        delivery_status = dictionary.get("deliveryStatus")
        description = dictionary.get("description")
        message_id = dictionary.get("messageId")
        message_type = dictionary.get("messageType")
        number_segements = dictionary.get("numberSegements")

        # Return an object of this model
        return cls(to,
                   delivery_status,
                   description,
                   message_id,
                   message_type,
                   number_segements)


