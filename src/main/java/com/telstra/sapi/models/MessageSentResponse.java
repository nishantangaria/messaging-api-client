/*
 * TelstraSMSMessagingAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.telstra.sapi.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class MessageSentResponse 
        implements java.io.Serializable {
    private static final long serialVersionUID = 4968705422618336251L;
    private String to;
    private String deliveryStatus;
    private String description;
    private String messageId;
    private MessageTypeEnum messageType;
    private Integer numberSegements;
    /** GETTER
     * The mobile phone number (in E.164 format) that the message was sent to.
     */
    @JsonGetter("to")
    public String getTo ( ) { 
        return this.to;
    }
    
    /** SETTER
     * The mobile phone number (in E.164 format) that the message was sent to.
     */
    @JsonSetter("to")
    public void setTo (String value) { 
        this.to = value;
    }
 
    /** GETTER
     * The current status of the message for this address. Possible values are; 'DeliveryImpossible' – The message has been rejected and cannot be delivered. see the description field. 'MessageWaiting' – The message will be delivered as soon as possible.
     */
    @JsonGetter("deliveryStatus")
    public String getDeliveryStatus ( ) { 
        return this.deliveryStatus;
    }
    
    /** SETTER
     * The current status of the message for this address. Possible values are; 'DeliveryImpossible' – The message has been rejected and cannot be delivered. see the description field. 'MessageWaiting' – The message will be delivered as soon as possible.
     */
    @JsonSetter("deliveryStatus")
    public void setDeliveryStatus (String value) { 
        this.deliveryStatus = value;
    }
 
    /** GETTER
     * This is a string that describes why a message could not be delivered.
     */
    @JsonGetter("description")
    public String getDescription ( ) { 
        return this.description;
    }
    
    /** SETTER
     * This is a string that describes why a message could not be delivered.
     */
    @JsonSetter("description")
    public void setDescription (String value) { 
        this.description = value;
    }
 
    /** GETTER
     * The message ID of the SMS that was sent. Use this ID to view the message status or to receive get responses.
     */
    @JsonGetter("messageId")
    public String getMessageId ( ) { 
        return this.messageId;
    }
    
    /** SETTER
     * The message ID of the SMS that was sent. Use this ID to view the message status or to receive get responses.
     */
    @JsonSetter("messageId")
    public void setMessageId (String value) { 
        this.messageId = value;
    }
 
    /** GETTER
     * A string that identifys the transport mechanism that was selected for delivering the the message.
     */
    @JsonGetter("messageType")
    public MessageTypeEnum getMessageType ( ) { 
        return this.messageType;
    }
    
    /** SETTER
     * A string that identifys the transport mechanism that was selected for delivering the the message.
     */
    @JsonSetter("messageType")
    public void setMessageType (MessageTypeEnum value) { 
        this.messageType = value;
    }
 
    /** GETTER
     * An integer between 0 and 65536 that indicates the number of chargable segments in the message. For SMS this will be the number of segments the message had to be divided into (after convertion) to a character set understood by the SMS network.
     */
    @JsonGetter("numberSegements")
    public Integer getNumberSegements ( ) { 
        return this.numberSegements;
    }
    
    /** SETTER
     * An integer between 0 and 65536 that indicates the number of chargable segments in the message. For SMS this will be the number of segments the message had to be divided into (after convertion) to a character set understood by the SMS network.
     */
    @JsonSetter("numberSegements")
    public void setNumberSegements (Integer value) { 
        this.numberSegements = value;
    }
 
}
 